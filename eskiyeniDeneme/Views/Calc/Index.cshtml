@model IEnumerable<eskiyeniDeneme.Models.calc>
@{
    ViewBag.Title = "Hesap Makinesi";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="~/Content/Site.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <style>
        body {
            background-color: #CC0000; /* Arka planı kırmızı yapar yap */
            color: black; /* Yazıları siyah yap */
        }

        .calculator {
            border: 1px solid #000;
            width: 100%;
            min-width: 250px;
            max-width: 400px;
            padding: 20px;
            margin: 0 auto;
            background-color: black; /* Hesap makinesi arka planı siyah yap */
            color: white; /* Hesap makinesi içindeki yazıları beyaz yap */
        }

        .display {
            width: 100%;
            height: 50px;
            text-align: right;
            margin-bottom: 10px;
            font-size: 1.5em;
            padding: 10px;
            border: 1px solid #000;
            background-color: #f2f2f2;
            color: black; /* Ekrandaki yazıları siyah yap */
        }

        .buttons {
            display: flex;
            flex-wrap: wrap;
        }

            .buttons button {
                flex: 1 0 23%;
                height: 50px;
                font-size: 1.2em;
                margin: 2px;
                cursor: pointer;
                border: 2px solid white; /* Buton kenarlıkları beyaz yap */
            }

                .buttons button.number,
                .buttons button.decimal {
                    background-color: black;
                    color: white;
                }

                .buttons button.operation {
                    background-color: orange;
                    color: white;
                }

                .buttons button.equal {
                    background-color: grey;
                    color: white;
                    flex: 1 0 73%; /* Eşittir butonunu genişletmek için */
                }

                .buttons button.clear,
                .buttons button.delete {
                    background-color: red;
                    color: white;
                }

        .calculation-history {
            margin-top: 20px;
            max-width: 400px;
            margin: 0 auto;
            text-align: center;
        }

            .calculation-history table {
                width: 100%;
                border-collapse: collapse;
            }

            .calculation-history th,
            .calculation-history td {
                border: 1px solid #000;
                padding: 8px;
                text-align: center;
            }

            .calculation-history th {
                background-color: #f2f2f2;
            }

        .history-container {
            border: 1px solid #ddd;
            padding: 10px;
            margin-top: 20px;
        }

        .history-entry {
            border-bottom: 1px solid #ddd;
            padding: 5px 0;
        }

            .history-entry:last-child {
                border-bottom: none;
            }
    </style>
</head>
<body>
    <div class="calculator">
        <div id="display" class="display"></div>
        <div class="buttons">
            <button onclick="appendNumber(7)" class="number">7</button>
            <button onclick="appendNumber(8)" class="number">8</button>
            <button onclick="appendNumber(9)" class="number">9</button>
            <button onclick="chooseOperation('/')" class="operation">/</button>
            <button onclick="appendNumber(4)" class="number">4</button>
            <button onclick="appendNumber(5)" class="number">5</button>
            <button onclick="appendNumber(6)" class="number">6</button>
            <button onclick="chooseOperation('*')" class="operation">*</button>
            <button onclick="appendNumber(1)" class="number">1</button>
            <button onclick="appendNumber(2)" class="number">2</button>
            <button onclick="appendNumber(3)" class="number">3</button>
            <button onclick="chooseOperation('-')" class="operation">-</button>
            <button onclick="appendDecimal()" class="decimal">.</button>
            <button onclick="appendNumber(0)" class="number">0</button>
            <button onclick="deleteNumber()" class="delete">⌫</button>
            <button onclick="chooseOperation('+')" class="operation">+</button>
            <button onclick="compute()" class="equal">=</button>
            <button onclick="clearDisplay()" class="clear">C</button>
        </div>
    </div>

    @section History {
        <h3>Calculation History</h3>
        <div id="calculationHistory" class="history-container">
            <table>
                <thead>
                    <tr>
                        <th>Sayi1</th>
                        <th>Islem</th>
                        <th>Sayi2</th>
                        <th>Sonuc</th>
                        <th>Zaman</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var calc in Model)
                    {
                        <tr>
                            <td>@calc.Sayi1</td>
                            <td>@calc.Islem</td>
                            <td>@calc.Sayi2</td>
                            <td>@calc.Sonuc</td>
                            <td>@calc.Timestamp.ToString("dd/MM/yyyy HH:mm:ss")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

<script>
    let currentOperand = '';
let previousOperand = '';
let operation = undefined;
let shouldResetScreen = false;

function appendNumber(number) {
    if (shouldResetScreen) {
        currentOperand = '';
        shouldResetScreen = false;
    }
    currentOperand = currentOperand.toString() + number.toString();
    updateDisplay();
}

function appendDecimal() {
    if (currentOperand.includes('.')) return;
    currentOperand = currentOperand.toString() + '.';
    updateDisplay();
}

function updateDisplay() {
    document.getElementById('display').innerText = `${previousOperand} ${operation || ''} ${currentOperand}`;
}

function chooseOperation(op) {
    if (currentOperand === '') return;
    if (previousOperand !== '') {
        compute();
    }
    operation = op;
    previousOperand = currentOperand;
    currentOperand = '';
    updateDisplay();
}

function compute() {
    if (previousOperand === '' || currentOperand === '') return;
    const sayi1 = parseFloat(previousOperand);
    const sayi2 = parseFloat(currentOperand);
    const expression = `${sayi1} ${operation} ${sayi2}`;
    const computation = evaluateExpression(expression);

    if (computation !== undefined) {
        currentOperand = computation;
        saveCalculation(sayi1, sayi2, operation, computation);
        operation = undefined;
        previousOperand = '';
        shouldResetScreen = true;
        updateDisplay();
    } else {
        console.error('Invalid computation');
    }
}

function clearDisplay() {
    currentOperand = '';
    previousOperand = '';
    operation = undefined;
    updateDisplay();
}

function deleteNumber() {
    currentOperand = currentOperand.toString().slice(0, -1);
    updateDisplay();
}

function evaluateExpression(expression) {
    try {
        return Function(`"use strict"; return (${expression})`)();
    } catch (e) {
        console.error('Error evaluating expression', e);
    }
}

function handleKeyboardInput(event) {
    const key = event.key;
    const keyCode = event.keyCode;

    if (keyCode >= 48 && keyCode <= 57) { // Numbers 0-9
        appendNumber(key);
    } else if (keyCode === 190 || keyCode === 110) { // Decimal point (.)
        appendDecimal();
    } else if (keyCode === 107 || keyCode === 109 || keyCode === 106 || keyCode === 111) { // + - * /
        const op = {
            107: '+',
            109: '-',
            106: '*',
            111: '/'
        }[keyCode];
        chooseOperation(op);
    } else if (keyCode === 13) { // Equals (=)
        compute();
    } else if (keyCode === 27) { // Clear (Esc key)
        clearDisplay();
    } else if (keyCode === 8) { // Delete (Backspace key)
        deleteNumber();
    }
}

document.addEventListener('keydown', handleKeyboardInput);

function saveCalculation(sayi1, sayi2, islem, sonuc) {
    $.ajax({
        url: '@Url.Action("SaveCalculation", "Calc")',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ Sayi1: sayi1, Sayi2: sayi2, Islem: islem, Sonuc: sonuc }),
        success: function (data) {
            if (data.success) {
                console.log('Calculation saved successfully');
                const historyRow = `<tr>
                    <td>${sayi1}</td>
                    <td>${islem}</td>
                    <td>${sayi2}</td>
                    <td>${sonuc}</td>
                    <td>${new Date().toLocaleString()}</td>
                </tr>`;
                document.querySelector('#calculationHistory tbody').innerHTML += historyRow;
            } else {
                console.error('Failed to save calculation');
            }
        },
        error: function () {
            console.error('Error while saving calculation');
        }
    });
}

</script>
</body>
</html>



